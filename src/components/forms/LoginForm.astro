---
import Input from './Input.astro';
import Button from '../common/Button.astro';
---

<div class="login-form-wrapper">
  <!-- Mensaje de estado -->
  <div id="message" class="message hidden"></div>

  <!-- Formulario de email -->
  <form id="login-form" class="space-y-6">
    <Input
      id="email"
      name="email"
      type="email"
      label="Correo electrónico"
      placeholder="tu@email.com"
      required
    />

    <Button
      type="submit"
      variant="primary"
      size="lg"
      class="w-full"
      id="submit-btn"
    >
      Enviar código de verificación
    </Button>
  </form>

  <!-- Sección de verificación (oculta inicialmente) -->
  <div id="verify-section" class="hidden verify-section">
    <form id="verify-form" class="space-y-4">
      <Input
        id="token"
        name="token"
        type="text"
        label="Código de verificación"
        placeholder="123456"
        maxlength={6}
        helperText="Revisa tu email para el código de 6 dígitos"
        required
      />

      <Button
        type="submit"
        variant="primary"
        size="lg"
        class="w-full btn-verify"
        id="verify-btn"
      >
        Verificar código
      </Button>
    </form>
  </div>

  <!-- Nota informativa -->
  <p class="info-text">
    Recibirás un email con un código de 6 dígitos para acceder
  </p>
</div>

<style>
  .login-form-wrapper {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .space-y-6 > * + * {
    margin-top: 1.5rem;
  }

  .space-y-4 > * + * {
    margin-top: 1rem;
  }

  .message {
    padding: 0.75rem 1rem;
    border-radius: 0.375rem;
    font-size: 0.875rem;
    font-weight: 500;
    text-align: center;
  }

  .message.success {
    background-color: #D1FAE5;
    color: #065F46;
    border: 1px solid #10B981;
  }

  .message.error {
    background-color: #FEE2E2;
    color: #991B1B;
    border: 1px solid #EF4444;
  }

  :global(.dark) .message.success {
    background-color: rgba(16, 185, 129, 0.2);
    color: #6EE7B7;
    border-color: rgba(16, 185, 129, 0.5);
  }

  :global(.dark) .message.error {
    background-color: rgba(239, 68, 68, 0.2);
    color: #FCA5A5;
    border-color: rgba(239, 68, 68, 0.5);
  }

  .verify-section {
    padding-top: 1.5rem;
    border-top: 1px solid #E5E7EB;
  }

  :global(.dark) .verify-section {
    border-top-color: rgba(148, 0, 255, 0.2);
  }

  .info-text {
    text-align: center;
    font-size: 0.75rem;
    color: #6B7280;
  }

  :global(.dark) .info-text {
    color: #9CA3AF;
  }
</style>

<script>
  let userEmail = '';

  const loginForm = document.getElementById('login-form') as HTMLFormElement;
  const verifyForm = document.getElementById('verify-form') as HTMLFormElement;
  const verifySection = document.getElementById('verify-section') as HTMLDivElement;
  const messageDiv = document.getElementById('message') as HTMLDivElement;
  const submitBtn = document.getElementById('submit-btn') as HTMLButtonElement;
  const verifyBtn = document.getElementById('verify-btn') as HTMLButtonElement;
  const emailInput = document.getElementById('email') as HTMLInputElement;

  // Función para mostrar mensajes
  function showMessage(text: string, isError: boolean = false) {
    messageDiv.textContent = text;
    messageDiv.className = `message ${isError ? 'error' : 'success'}`;
    messageDiv.classList.remove('hidden');
  }

  // Enviar código OTP
  loginForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    submitBtn.disabled = true;
    submitBtn.textContent = 'Enviando...';

    const formData = new FormData(loginForm);
    userEmail = formData.get('email') as string;

    try {
      const response = await fetch('/api/auth/login', {
        method: 'POST',
        body: formData
      });

      const data = await response.json();

      if (response.ok) {
        showMessage(data.message);
        verifySection.classList.remove('hidden');
        emailInput.setAttribute('readonly', 'true');
        submitBtn.classList.add('hidden');
      } else {
        showMessage(data.error, true);
        submitBtn.disabled = false;
        submitBtn.textContent = 'Enviar código de verificación';
      }
    } catch (error) {
      showMessage('Error al enviar el código', true);
      submitBtn.disabled = false;
      submitBtn.textContent = 'Enviar código de verificación';
    }
  });

  // Verificar código OTP
  verifyForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    verifyBtn.disabled = true;
    verifyBtn.textContent = 'Verificando...';

    const formData = new FormData(verifyForm);
    formData.append('email', userEmail);

    try {
      const response = await fetch('/api/auth/verify', {
        method: 'POST',
        body: formData
      });

      const data = await response.json();

      if (response.ok) {
        showMessage('¡Autenticación exitosa! Redirigiendo...');
        setTimeout(() => {
          window.location.href = '/';
        }, 1000);
      } else {
        showMessage(data.error, true);
        verifyBtn.disabled = false;
        verifyBtn.textContent = 'Verificar código';
      }
    } catch (error) {
      showMessage('Error al verificar el código', true);
      verifyBtn.disabled = false;
      verifyBtn.textContent = 'Verificar código';
    }
  });
</script>
