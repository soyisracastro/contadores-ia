---
interface Props {
  title: string;
  description: string;
  pubDate: Date;
  slug: string;
  tags: string[];
  premium: boolean;
}

const { title, description, pubDate, slug, tags, premium } = Astro.props;

const formattedDate = new Intl.DateTimeFormat('es-MX', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
}).format(pubDate);
---

<article class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition">
  <div class="p-6">
    <div class="flex items-center gap-2 mb-3">
      {premium && (
        <span class="bg-yellow-100 text-yellow-800 text-xs font-semibold px-2 py-1 rounded">
          Premium
        </span>
      )}
      <time class="text-sm text-gray-500">{formattedDate}</time>
    </div>

    <h3 class="text-xl font-bold text-gray-900 mb-2">
      <a href={`/blog/${slug}`} class="hover:text-blue-600 transition">
        {title}
      </a>
    </h3>

    <p class="text-gray-600 mb-4 line-clamp-2">
      {description}
    </p>

    <div class="flex flex-wrap gap-2 mb-4">
      {tags.map((tag) => (
        <span class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded">
          {tag}
        </span>
      ))}
    </div>

    <a
      href={`/blog/${slug}`}
      class="text-blue-600 hover:text-blue-800 text-sm font-semibold inline-flex items-center"
    >
      Leer m√°s
      <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
      </svg>
    </a>
  </div>
</article>
