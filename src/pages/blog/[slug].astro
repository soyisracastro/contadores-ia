---
import Layout from '../../layouts/Layout.astro';
import ArticleHeader from '../../components/article/ArticleHeader.astro';
import PremiumLockMessage from '../../components/article/PremiumLockMessage.astro';
import { getEntry } from 'astro:content';
import { canAccessPremiumContent } from '../../lib/auth';

// Obtener el slug de la URL
const { slug } = Astro.params;

// Obtener el post
const post = await getEntry('blog', slug || '');

// Si no existe el post, redirigir al blog
if (!post) {
  return Astro.redirect('/blog');
}

const { Content } = await post.render();

// Verificar acceso a contenido premium
const accessResult = await canAccessPremiumContent(Astro.cookies);

// Determinar si mostrar contenido o mensaje de bloqueo
const canAccess = !post.data.premium || accessResult.hasAccess;
const needsAuth = post.data.premium && !canAccess;
---

<Layout title={post.data.title} description={post.data.description}>
  <article class="article-container max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <!-- Header del artículo -->
    <ArticleHeader
      title={post.data.title}
      description={post.data.description}
      pubDate={post.data.pubDate}
      author={post.data.author}
      tags={post.data.tags}
      premium={post.data.premium}
    />

    <!-- Contenido o mensaje de acceso restringido -->
    {needsAuth ? (
      <PremiumLockMessage accessResult={accessResult} />
    ) : (
      <div class="prose prose-lg max-w-none">
        <Content />
      </div>
    )}

    <!-- Navegación -->
    <div class="article-navigation mt-12 pt-8">
      <a href="/blog" class="back-to-blog">
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
        </svg>
        Volver al blog
      </a>
    </div>
  </article>
</Layout>

<style>
  /* ===== ARTICLE CONTAINER ===== */
  .article-container {
    background: white;
  }

  :global(.dark) .article-container {
    background: #0a0a0a;
  }

  /* ===== NAVIGATION ===== */
  .article-navigation {
    border-top: 1px solid #e5e7eb;
  }

  :global(.dark) .article-navigation {
    border-top-color: rgba(255, 255, 255, 0.1);
  }

  .back-to-blog {
    display: inline-flex;
    align-items: center;
    color: #9400FF;
    font-weight: 600;
    transition: all 0.3s ease;
  }

  .back-to-blog:hover {
    color: #7000CC;
    transform: translateX(-5px);
  }

  :global(.dark) .back-to-blog {
    color: #00FFFF;
  }

  :global(.dark) .back-to-blog:hover {
    color: #00CCCC;
    text-shadow: 0 0 10px rgba(0, 255, 255, 0.5);
  }

  /* ===== PROSE CUSTOMIZATION ===== */
  .prose {
    color: #374151;
  }

  :global(.dark) .prose {
    color: #E1E1E1;
  }

  /* Headings */
  .prose :global(h1),
  .prose :global(h2),
  .prose :global(h3),
  .prose :global(h4),
  .prose :global(h5),
  .prose :global(h6) {
    color: #22223B;
    font-weight: 700;
    margin-top: 2rem;
    margin-bottom: 1rem;
  }

  :global(.dark) .prose :global(h1),
  :global(.dark) .prose :global(h2),
  :global(.dark) .prose :global(h3),
  :global(.dark) .prose :global(h4),
  :global(.dark) .prose :global(h5),
  :global(.dark) .prose :global(h6) {
    background: linear-gradient(135deg, #9400FF 0%, #00FFFF 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  /* Links */
  .prose :global(a) {
    color: #9400FF;
    text-decoration: underline;
    transition: color 0.3s ease;
  }

  .prose :global(a:hover) {
    color: #7000CC;
  }

  :global(.dark) .prose :global(a) {
    color: #00FFFF;
  }

  :global(.dark) .prose :global(a:hover) {
    color: #00CCCC;
    text-shadow: 0 0 10px rgba(0, 255, 255, 0.5);
  }

  /* Lists */
  .prose :global(ul),
  .prose :global(ol) {
    margin-left: 1.5rem;
    margin-top: 1rem;
    margin-bottom: 1rem;
  }

  .prose :global(li) {
    margin-bottom: 0.5rem;
    color: #555;
  }

  :global(.dark) .prose :global(li) {
    color: rgba(225, 225, 225, 0.8);
  }

  .prose :global(ul > li)::marker {
    color: #9400FF;
  }

  :global(.dark) .prose :global(ul > li)::marker {
    color: #00FFFF;
  }

  /* Code blocks */
  .prose :global(code) {
    background: rgba(148, 0, 255, 0.1);
    color: #9400FF;
    padding: 0.2rem 0.4rem;
    border-radius: 0.25rem;
    font-size: 0.875em;
  }

  :global(.dark) .prose :global(code) {
    background: rgba(0, 255, 255, 0.1);
    color: #00FFFF;
  }

  .prose :global(pre) {
    background: #f3f4f6;
    padding: 1rem;
    border-radius: 0.5rem;
    overflow-x: auto;
    border: 1px solid #e5e7eb;
  }

  :global(.dark) .prose :global(pre) {
    background: #1a1a1a;
    border-color: rgba(255, 255, 255, 0.1);
  }

  .prose :global(pre code) {
    background: transparent;
    color: #374151;
    padding: 0;
  }

  :global(.dark) .prose :global(pre code) {
    color: #E1E1E1;
  }

  /* Blockquotes */
  .prose :global(blockquote) {
    border-left: 4px solid #9400FF;
    padding-left: 1rem;
    margin-left: 0;
    font-style: italic;
    color: #555;
  }

  :global(.dark) .prose :global(blockquote) {
    border-left-color: #00FFFF;
    color: rgba(225, 225, 225, 0.8);
  }

  /* Tables */
  .prose :global(table) {
    width: 100%;
    border-collapse: collapse;
    margin: 1.5rem 0;
  }

  .prose :global(th),
  .prose :global(td) {
    border: 1px solid #e5e7eb;
    padding: 0.75rem;
    text-align: left;
  }

  :global(.dark) .prose :global(th),
  :global(.dark) .prose :global(td) {
    border-color: rgba(255, 255, 255, 0.1);
  }

  .prose :global(th) {
    background: rgba(148, 0, 255, 0.1);
    font-weight: 600;
  }

  :global(.dark) .prose :global(th) {
    background: rgba(0, 255, 255, 0.1);
  }

  /* Images */
  .prose :global(img) {
    border-radius: 0.5rem;
    border: 1px solid #e5e7eb;
  }

  :global(.dark) .prose :global(img) {
    border-color: rgba(255, 255, 255, 0.1);
  }

  /* Horizontal rules */
  .prose :global(hr) {
    border: none;
    height: 2px;
    background: linear-gradient(90deg, transparent, #9400FF, transparent);
    margin: 2rem 0;
  }

  :global(.dark) .prose :global(hr) {
    background: linear-gradient(90deg, transparent, #00FFFF, transparent);
  }

  /* Paragraphs */
  .prose :global(p) {
    margin-bottom: 1.25rem;
    line-height: 1.75;
  }

  /* Strong/Bold */
  .prose :global(strong) {
    color: #22223B;
    font-weight: 600;
  }

  :global(.dark) .prose :global(strong) {
    color: #00FFFF;
  }
</style>
